import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:app/core/models/blog_model.dart';
import 'package:provider/provider.dart';
import 'blog_viewmodel.dart';
import 'package:flutter_html/flutter_html.dart';
import 'package:html_editor_enhanced/html_editor.dart';

class BlogPage extends StatefulWidget {
  const BlogPage({Key? key}) : super(key: key);

  @override
  BlogPageState createState() => BlogPageState();
}

class BlogPageState extends State<BlogPage> {
  HtmlEditorController controller = HtmlEditorController();
  final ScrollController _scrollController = ScrollController();
  String htmlContent = '';
  Future<void> saveContent() async {
    htmlContent = await controller.getText();
  }

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider<BlogViewModel>(
      create: (context) => BlogViewModel(),
      child: Scaffold(
        appBar: AppBar(
          title: const Text('Profile'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Expanded(
                child: Consumer<BlogViewModel>(
                  builder: (context, blogViewModel, child) {
                    Provider.of<BlogViewModel>(context, listen: false)
                        .fetchAll();
                    final blogs = blogViewModel.blogPosts;

                    return Column(
                      children: [
                        HtmlEditor(
                          controller: controller,
                          htmlEditorOptions:const HtmlEditorOptions(
                            hint: "Insert the blog description here...",
                            //initalText: "text content initial, if any",
                          ),
                          otherOptions: const OtherOptions(
                            height: 200,
                          ),
                        ),
                        Expanded(
                          child: blogs.isEmpty
                              ? const Center(
                                  child: Text(
                                      'No blog posts found. Click the button below to create one.'),
                                )
                              : ListView.builder(
                                  controller: _scrollController,
                                  itemCount: blogs.length,
                                  itemBuilder: (context, index) {
                                    final blog = blogs[index];
                                    return ListTile(
                                      title: Text(blog.title),
                                      subtitle: Html(data: blog.description),
                                      trailing: IconButton(
                                        icon: const Icon(Icons.delete),
                                        onPressed: () {
                                          blogViewModel.delete(blog.id);
                                        },
                                      ),
                                    );
                                  },
                                ),
                        ),
                        ElevatedButton(
                          onPressed: () async {
                            await saveContent();
                            BlogModel newBlog = BlogModel(
                              id: '1', // The 'id' should be generated by Firestore when creating a new post
                              tags: ['Flutter', 'Firebase'],
                              title: 'New Blog Post',
                              description: htmlContent,
                              memberID: 'member123',
                              createdTime: Timestamp.now(),
                              updatedTime: Timestamp.now(),
                              image: 'url_to_image',
                            );
                            // Call createBlog method from BlogViewModel
                            Provider.of<BlogViewModel>(context, listen: false)
                                .createBlog((blogs.length+1).toString(), newBlog);
                          },
                          child: const Text('Create Blog'),
                        ),
                        const SizedBox(height: 20),
                        ElevatedButton(
                          onPressed: () async {
                            await saveContent();
                            // Call createBlog method from BlogViewModel
                            Provider.of<BlogViewModel>(context, listen: false)
                                .updateBlog("1", htmlContent);
                          },
                          child: const Text('Update Blog 1 Description'),
                        ),
                        const SizedBox(height: 20),
                      ],
                    );
                  },
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}